/* Generated By:JavaCC: Do not edit this line. SyntaxCheckerTokenManager.java */
package org.catrobat.catroid.wrapper;
import org.catrobat.catroid.formulaeditor.Formula;
import org.catrobat.catroid.formulaeditor.FormulaElement;
import org.catrobat.catroid.formulaeditor.Functions;
import org.catrobat.catroid.formulaeditor.InternFormulaParser;
import org.catrobat.catroid.formulaeditor.InternToken;
import org.catrobat.catroid.formulaeditor.InternTokenType;
import org.catrobat.catroid.formulaeditor.Operators;
import org.catrobat.catroid.formulaeditor.Sensors;
import android.util.Log;
import java.util.LinkedList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

/** Token Manager. */
public class SyntaxCheckerTokenManager implements SyntaxCheckerConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
	  default :
		 return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
	  case 39:
		 return jjStopAtPos(0, 13);
	  case 40:
		 return jjStopAtPos(0, 16);
	  case 41:
		 return jjStopAtPos(0, 18);
	  case 44:
		 return jjStopAtPos(0, 17);
	  case 91:
		 return jjStopAtPos(0, 14);
	  case 93:
		 return jjStopAtPos(0, 15);
	  case 123:
		 return jjStopAtPos(0, 11);
	  case 125:
		 return jjStopAtPos(0, 12);
	  default :
		 return jjMoveNfa_0(5, 0);
   }
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 294;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
	  if (++jjround == 0x7fffffff)
		 ReInitRounds();
	  if (curChar < 64)
	  {
		 long l = 1L << curChar;
		 do
		 {
			switch(jjstateSet[--i])
			{
			   case 5:
				  if ((0x3ff000000000000L & l) != 0L)
				  {
					 if (kind > 10)
						kind = 10;
					 jjCheckNAdd(93);
				  }
				  else if ((0x7000ac4200000000L & l) != 0L)
				  {
					 if (kind > 6)
						kind = 6;
				  }
				  if ((0x3ff000000000000L & l) != 0L)
				  {
					 if (kind > 5)
						kind = 5;
					 jjCheckNAddTwoStates(0, 1);
				  }
				  else if (curChar == 62)
					 jjCheckNAdd(13);
				  else if (curChar == 60)
					 jjCheckNAdd(13);
				  else if (curChar == 33)
					 jjCheckNAdd(13);
				  else if (curChar == 61)
					 jjCheckNAdd(13);
				  else if (curChar == 38)
					 jjstateSet[jjnewStateCnt++] = 6;
				  break;
			   case 0:
				  if ((0x3ff000000000000L & l) == 0L)
					 break;
				  if (kind > 5)
					 kind = 5;
				  jjCheckNAddTwoStates(0, 1);
				  break;
			   case 1:
				  if (curChar == 46)
					 jjCheckNAdd(2);
				  break;
			   case 2:
				  if ((0x3ff000000000000L & l) == 0L)
					 break;
				  if (kind > 5)
					 kind = 5;
				  jjCheckNAdd(2);
				  break;
			   case 6:
				  if (curChar == 38 && kind > 6)
					 kind = 6;
				  break;
			   case 7:
				  if (curChar == 38)
					 jjstateSet[jjnewStateCnt++] = 6;
				  break;
			   case 8:
				  if ((0x7000ac4200000000L & l) != 0L && kind > 6)
					 kind = 6;
				  break;
			   case 13:
				  if (curChar == 61 && kind > 6)
					 kind = 6;
				  break;
			   case 14:
				  if (curChar == 61)
					 jjCheckNAdd(13);
				  break;
			   case 18:
				  if (curChar == 33)
					 jjCheckNAdd(13);
				  break;
			   case 19:
				  if (curChar == 60)
					 jjCheckNAdd(13);
				  break;
			   case 20:
				  if (curChar == 62)
					 jjCheckNAdd(13);
				  break;
			   case 93:
				  if ((0x3ff000000000000L & l) == 0L)
					 break;
				  if (kind > 10)
					 kind = 10;
				  jjCheckNAdd(93);
				  break;
			   default : break;
			}
		 } while(i != startsAt);
	  }
	  else if (curChar < 128)
	  {
		 long l = 1L << (curChar & 077);
		 do
		 {
			switch(jjstateSet[--i])
			{
			   case 5:
				  if ((0x7fffffe87fffffeL & l) != 0L)
				  {
					 if (kind > 10)
						kind = 10;
					 jjCheckNAdd(93);
				  }
				  else if ((0x1000000040000000L & l) != 0L)
				  {
					 if (kind > 6)
						kind = 6;
				  }
				  if (curChar == 108)
					 jjCheckNAddStates(0, 5);
				  else if (curChar == 97)
					 jjAddStates(6, 13);
				  else if (curChar == 115)
					 jjAddStates(14, 16);
				  else if (curChar == 99)
					 jjAddStates(17, 19);
				  else if (curChar == 112)
					 jjAddStates(20, 22);
				  else if (curChar == 116)
					 jjAddStates(23, 25);
				  else if (curChar == 101)
					 jjAddStates(26, 27);
				  else if (curChar == 109)
					 jjAddStates(28, 30);
				  else if (curChar == 114)
					 jjAddStates(31, 33);
				  else if (curChar == 105)
					 jjAddStates(34, 35);
				  else if (curChar == 121)
					 jjstateSet[jjnewStateCnt++] = 91;
				  else if (curChar == 120)
					 jjstateSet[jjnewStateCnt++] = 82;
				  else if (curChar == 100)
					 jjstateSet[jjnewStateCnt++] = 72;
				  else if (curChar == 98)
					 jjstateSet[jjnewStateCnt++] = 63;
				  else if (curChar == 102)
					 jjstateSet[jjnewStateCnt++] = 53;
				  else if (curChar == 70)
					 jjstateSet[jjnewStateCnt++] = 48;
				  else if (curChar == 84)
					 jjstateSet[jjnewStateCnt++] = 44;
				  else if (curChar == 80)
					 jjstateSet[jjnewStateCnt++] = 40;
				  else if (curChar == 106)
					 jjstateSet[jjnewStateCnt++] = 38;
				  else if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 34;
				  else if (curChar == 78)
					 jjstateSet[jjnewStateCnt++] = 16;
				  else if (curChar == 124)
					 jjstateSet[jjnewStateCnt++] = 11;
				  else if (curChar == 79)
					 jjstateSet[jjnewStateCnt++] = 9;
				  else if (curChar == 65)
					 jjstateSet[jjnewStateCnt++] = 4;
				  break;
			   case 3:
				  if (curChar == 68 && kind > 6)
					 kind = 6;
				  break;
			   case 4:
				  if (curChar == 78)
					 jjstateSet[jjnewStateCnt++] = 3;
				  break;
			   case 8:
				  if ((0x1000000040000000L & l) != 0L && kind > 6)
					 kind = 6;
				  break;
			   case 9:
				  if (curChar == 82 && kind > 6)
					 kind = 6;
				  break;
			   case 10:
				  if (curChar == 79)
					 jjstateSet[jjnewStateCnt++] = 9;
				  break;
			   case 11:
				  if (curChar == 124 && kind > 6)
					 kind = 6;
				  break;
			   case 12:
				  if (curChar == 124)
					 jjstateSet[jjnewStateCnt++] = 11;
				  break;
			   case 15:
				  if (curChar == 84 && kind > 6)
					 kind = 6;
				  break;
			   case 16:
				  if (curChar == 79)
					 jjstateSet[jjnewStateCnt++] = 15;
				  break;
			   case 17:
				  if (curChar == 78)
					 jjstateSet[jjnewStateCnt++] = 16;
				  break;
			   case 21:
				  if (curChar == 115 && kind > 7)
					 kind = 7;
				  break;
			   case 22:
				  if (curChar == 109)
					 jjCheckNAdd(21);
				  break;
			   case 23:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 22;
				  break;
			   case 24:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 23;
				  break;
			   case 25:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 24;
				  break;
			   case 26:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 25;
				  break;
			   case 27:
				  if (curChar == 102)
					 jjstateSet[jjnewStateCnt++] = 26;
				  break;
			   case 28:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 27;
				  break;
			   case 29:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 28;
				  break;
			   case 30:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 29;
				  break;
			   case 31:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 30;
				  break;
			   case 32:
				  if (curChar == 98)
					 jjstateSet[jjnewStateCnt++] = 31;
				  break;
			   case 33:
				  if (curChar == 109)
					 jjstateSet[jjnewStateCnt++] = 32;
				  break;
			   case 34:
				  if (curChar == 117)
					 jjstateSet[jjnewStateCnt++] = 33;
				  break;
			   case 35:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 34;
				  break;
			   case 36:
				  if (curChar == 110 && kind > 7)
					 kind = 7;
				  break;
			   case 37:
			   case 134:
			   case 200:
			   case 208:
				  if (curChar == 105)
					 jjCheckNAdd(36);
				  break;
			   case 38:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 37;
				  break;
			   case 39:
				  if (curChar == 106)
					 jjstateSet[jjnewStateCnt++] = 38;
				  break;
			   case 40:
				  if (curChar == 73 && kind > 8)
					 kind = 8;
				  break;
			   case 41:
				  if (curChar == 80)
					 jjstateSet[jjnewStateCnt++] = 40;
				  break;
			   case 42:
				  if (curChar == 69 && kind > 8)
					 kind = 8;
				  break;
			   case 43:
				  if (curChar == 85)
					 jjCheckNAdd(42);
				  break;
			   case 44:
				  if (curChar == 82)
					 jjstateSet[jjnewStateCnt++] = 43;
				  break;
			   case 45:
				  if (curChar == 84)
					 jjstateSet[jjnewStateCnt++] = 44;
				  break;
			   case 46:
				  if (curChar == 83)
					 jjCheckNAdd(42);
				  break;
			   case 47:
				  if (curChar == 76)
					 jjstateSet[jjnewStateCnt++] = 46;
				  break;
			   case 48:
				  if (curChar == 65)
					 jjstateSet[jjnewStateCnt++] = 47;
				  break;
			   case 49:
				  if (curChar == 70)
					 jjstateSet[jjnewStateCnt++] = 48;
				  break;
			   case 50:
				  if (curChar == 101 && kind > 8)
					 kind = 8;
				  break;
			   case 51:
				  if (curChar == 115)
					 jjCheckNAdd(50);
				  break;
			   case 52:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 51;
				  break;
			   case 53:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 52;
				  break;
			   case 54:
				  if (curChar == 102)
					 jjstateSet[jjnewStateCnt++] = 53;
				  break;
			   case 55:
				  if (curChar == 115 && kind > 9)
					 kind = 9;
				  break;
			   case 56:
			   case 284:
				  if (curChar == 115)
					 jjCheckNAdd(55);
				  break;
			   case 57:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 56;
				  break;
			   case 58:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 57;
				  break;
			   case 59:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 58;
				  break;
			   case 60:
				  if (curChar == 104)
					 jjstateSet[jjnewStateCnt++] = 59;
				  break;
			   case 61:
				  if (curChar == 103)
					 jjstateSet[jjnewStateCnt++] = 60;
				  break;
			   case 62:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 61;
				  break;
			   case 63:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 62;
				  break;
			   case 64:
				  if (curChar == 98)
					 jjstateSet[jjnewStateCnt++] = 63;
				  break;
			   case 65:
				  if (curChar == 110 && kind > 9)
					 kind = 9;
				  break;
			   case 66:
			   case 184:
				  if (curChar == 111)
					 jjCheckNAdd(65);
				  break;
			   case 67:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 66;
				  break;
			   case 68:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 67;
				  break;
			   case 69:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 68;
				  break;
			   case 70:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 69;
				  break;
			   case 71:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 70;
				  break;
			   case 72:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 71;
				  break;
			   case 73:
				  if (curChar == 100)
					 jjstateSet[jjnewStateCnt++] = 72;
				  break;
			   case 74:
				  if (curChar == 121 && kind > 9)
					 kind = 9;
				  break;
			   case 75:
			   case 84:
			   case 257:
				  if (curChar == 116)
					 jjCheckNAdd(74);
				  break;
			   case 76:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 75;
				  break;
			   case 77:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 76;
				  break;
			   case 78:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 77;
				  break;
			   case 79:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 78;
				  break;
			   case 80:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 79;
				  break;
			   case 81:
				  if (curChar == 118)
					 jjstateSet[jjnewStateCnt++] = 80;
				  break;
			   case 82:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 81;
				  break;
			   case 83:
				  if (curChar == 120)
					 jjstateSet[jjnewStateCnt++] = 82;
				  break;
			   case 85:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 84;
				  break;
			   case 86:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 85;
				  break;
			   case 87:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 86;
				  break;
			   case 88:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 87;
				  break;
			   case 89:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 88;
				  break;
			   case 90:
				  if (curChar == 118)
					 jjstateSet[jjnewStateCnt++] = 89;
				  break;
			   case 91:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 90;
				  break;
			   case 92:
				  if (curChar == 121)
					 jjstateSet[jjnewStateCnt++] = 91;
				  break;
			   case 93:
				  if ((0x7fffffe87fffffeL & l) == 0L)
					 break;
				  if (kind > 10)
					 kind = 10;
				  jjCheckNAdd(93);
				  break;
			   case 94:
				  if (curChar == 105)
					 jjAddStates(34, 35);
				  break;
			   case 95:
				  if (curChar == 120 && kind > 9)
					 kind = 9;
				  break;
			   case 96:
			   case 160:
			   case 220:
				  if (curChar == 95)
					 jjCheckNAdd(95);
				  break;
			   case 97:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 96;
				  break;
			   case 98:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 97;
				  break;
			   case 99:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 98;
				  break;
			   case 100:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 99;
				  break;
			   case 101:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 100;
				  break;
			   case 102:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 101;
				  break;
			   case 103:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 102;
				  break;
			   case 104:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 103;
				  break;
			   case 105:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 104;
				  break;
			   case 106:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 105;
				  break;
			   case 107:
			   case 168:
			   case 232:
				  if (curChar == 95)
					 jjCheckNAdd(74);
				  break;
			   case 108:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 107;
				  break;
			   case 109:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 108;
				  break;
			   case 110:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 109;
				  break;
			   case 111:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 110;
				  break;
			   case 112:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 111;
				  break;
			   case 113:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 112;
				  break;
			   case 114:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 113;
				  break;
			   case 115:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 114;
				  break;
			   case 116:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 115;
				  break;
			   case 117:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 116;
				  break;
			   case 118:
				  if (curChar == 114)
					 jjAddStates(31, 33);
				  break;
			   case 119:
				  if (curChar == 100 && kind > 7)
					 kind = 7;
				  break;
			   case 120:
			   case 123:
				  if (curChar == 110)
					 jjCheckNAdd(119);
				  break;
			   case 121:
				  if (curChar == 117)
					 jjstateSet[jjnewStateCnt++] = 120;
				  break;
			   case 122:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 121;
				  break;
			   case 124:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 123;
				  break;
			   case 125:
				  if (curChar == 109 && kind > 7)
					 kind = 7;
				  break;
			   case 126:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 125;
				  break;
			   case 127:
				  if (curChar == 100)
					 jjstateSet[jjnewStateCnt++] = 126;
				  break;
			   case 128:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 127;
				  break;
			   case 129:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 128;
				  break;
			   case 130:
				  if (curChar == 109)
					 jjAddStates(28, 30);
				  break;
			   case 131:
				  if (curChar == 111)
					 jjCheckNAdd(119);
				  break;
			   case 132:
				  if (curChar == 120 && kind > 7)
					 kind = 7;
				  break;
			   case 133:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 132;
				  break;
			   case 135:
				  if (curChar == 101)
					 jjAddStates(26, 27);
				  break;
			   case 136:
				  if (curChar == 112 && kind > 7)
					 kind = 7;
				  break;
			   case 137:
				  if (curChar == 120)
					 jjstateSet[jjnewStateCnt++] = 136;
				  break;
			   case 138:
				  if (curChar == 116 && kind > 7)
					 kind = 7;
				  break;
			   case 139:
				  if (curChar == 110)
					 jjCheckNAdd(138);
				  break;
			   case 140:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 139;
				  break;
			   case 141:
				  if (curChar == 109)
					 jjstateSet[jjnewStateCnt++] = 140;
				  break;
			   case 142:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 141;
				  break;
			   case 143:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 142;
				  break;
			   case 144:
				  if (curChar == 116)
					 jjAddStates(23, 25);
				  break;
			   case 145:
			   case 216:
				  if (curChar == 97)
					 jjCheckNAdd(36);
				  break;
			   case 146:
				  if (curChar == 117)
					 jjCheckNAdd(50);
				  break;
			   case 147:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 146;
				  break;
			   case 148:
				  if (curChar == 99)
					 jjCheckNAdd(74);
				  break;
			   case 149:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 148;
				  break;
			   case 150:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 149;
				  break;
			   case 151:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 150;
				  break;
			   case 152:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 151;
				  break;
			   case 153:
				  if (curChar == 112)
					 jjstateSet[jjnewStateCnt++] = 152;
				  break;
			   case 154:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 153;
				  break;
			   case 155:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 154;
				  break;
			   case 156:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 155;
				  break;
			   case 157:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 156;
				  break;
			   case 158:
				  if (curChar == 112)
					 jjAddStates(20, 22);
				  break;
			   case 159:
				  if (curChar == 105 && kind > 8)
					 kind = 8;
				  break;
			   case 161:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 160;
				  break;
			   case 162:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 161;
				  break;
			   case 163:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 162;
				  break;
			   case 164:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 163;
				  break;
			   case 165:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 164;
				  break;
			   case 166:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 165;
				  break;
			   case 167:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 166;
				  break;
			   case 169:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 168;
				  break;
			   case 170:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 169;
				  break;
			   case 171:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 170;
				  break;
			   case 172:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 171;
				  break;
			   case 173:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 172;
				  break;
			   case 174:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 173;
				  break;
			   case 175:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 174;
				  break;
			   case 176:
				  if (curChar == 99)
					 jjAddStates(17, 19);
				  break;
			   case 177:
			   case 212:
				  if (curChar == 111)
					 jjCheckNAdd(21);
				  break;
			   case 178:
				  if (curChar == 110)
					 jjCheckNAdd(21);
				  break;
			   case 179:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 178;
				  break;
			   case 180:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 179;
				  break;
			   case 181:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 180;
				  break;
			   case 182:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 181;
				  break;
			   case 183:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 182;
				  break;
			   case 185:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 184;
				  break;
			   case 186:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 185;
				  break;
			   case 187:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 186;
				  break;
			   case 188:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 187;
				  break;
			   case 189:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 188;
				  break;
			   case 190:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 189;
				  break;
			   case 191:
				  if (curChar == 100)
					 jjstateSet[jjnewStateCnt++] = 190;
				  break;
			   case 192:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 191;
				  break;
			   case 193:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 192;
				  break;
			   case 194:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 193;
				  break;
			   case 195:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 194;
				  break;
			   case 196:
				  if (curChar == 112)
					 jjstateSet[jjnewStateCnt++] = 195;
				  break;
			   case 197:
				  if (curChar == 109)
					 jjstateSet[jjnewStateCnt++] = 196;
				  break;
			   case 198:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 197;
				  break;
			   case 199:
				  if (curChar == 115)
					 jjAddStates(14, 16);
				  break;
			   case 201:
				  if (curChar == 114)
					 jjCheckNAdd(138);
				  break;
			   case 202:
				  if (curChar == 113)
					 jjstateSet[jjnewStateCnt++] = 201;
				  break;
			   case 203:
				  if (curChar == 101 && kind > 9)
					 kind = 9;
				  break;
			   case 204:
				  if (curChar == 122)
					 jjstateSet[jjnewStateCnt++] = 203;
				  break;
			   case 205:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 204;
				  break;
			   case 206:
				  if (curChar == 97)
					 jjAddStates(6, 13);
				  break;
			   case 207:
				  if (curChar == 98)
					 jjCheckNAdd(21);
				  break;
			   case 209:
				  if (curChar == 115)
					 jjstateSet[jjnewStateCnt++] = 208;
				  break;
			   case 210:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 209;
				  break;
			   case 211:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 210;
				  break;
			   case 213:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 212;
				  break;
			   case 214:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 213;
				  break;
			   case 215:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 214;
				  break;
			   case 217:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 216;
				  break;
			   case 218:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 217;
				  break;
			   case 219:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 218;
				  break;
			   case 221:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 220;
				  break;
			   case 222:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 221;
				  break;
			   case 223:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 222;
				  break;
			   case 224:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 223;
				  break;
			   case 225:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 224;
				  break;
			   case 226:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 225;
				  break;
			   case 227:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 226;
				  break;
			   case 228:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 227;
				  break;
			   case 229:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 228;
				  break;
			   case 230:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 229;
				  break;
			   case 231:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 230;
				  break;
			   case 233:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 232;
				  break;
			   case 234:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 233;
				  break;
			   case 235:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 234;
				  break;
			   case 236:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 235;
				  break;
			   case 237:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 236;
				  break;
			   case 238:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 237;
				  break;
			   case 239:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 238;
				  break;
			   case 240:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 239;
				  break;
			   case 241:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 240;
				  break;
			   case 242:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 241;
				  break;
			   case 243:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 242;
				  break;
			   case 244:
				  if (curChar == 122 && kind > 9)
					 kind = 9;
				  break;
			   case 245:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 244;
				  break;
			   case 246:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 245;
				  break;
			   case 247:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 246;
				  break;
			   case 248:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 247;
				  break;
			   case 249:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 248;
				  break;
			   case 250:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 249;
				  break;
			   case 251:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 250;
				  break;
			   case 252:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 251;
				  break;
			   case 253:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 252;
				  break;
			   case 254:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 253;
				  break;
			   case 255:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 254;
				  break;
			   case 256:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 255;
				  break;
			   case 258:
				  if (curChar == 105)
					 jjstateSet[jjnewStateCnt++] = 257;
				  break;
			   case 259:
				  if (curChar == 99)
					 jjstateSet[jjnewStateCnt++] = 258;
				  break;
			   case 260:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 259;
				  break;
			   case 261:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 260;
				  break;
			   case 262:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 261;
				  break;
			   case 263:
				  if (curChar == 118)
					 jjstateSet[jjnewStateCnt++] = 262;
				  break;
			   case 264:
				  if (curChar == 95)
					 jjstateSet[jjnewStateCnt++] = 263;
				  break;
			   case 265:
				  if (curChar == 114)
					 jjstateSet[jjnewStateCnt++] = 264;
				  break;
			   case 266:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 265;
				  break;
			   case 267:
				  if (curChar == 108)
					 jjstateSet[jjnewStateCnt++] = 266;
				  break;
			   case 268:
				  if (curChar == 117)
					 jjstateSet[jjnewStateCnt++] = 267;
				  break;
			   case 269:
				  if (curChar == 103)
					 jjstateSet[jjnewStateCnt++] = 268;
				  break;
			   case 270:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 269;
				  break;
			   case 271:
				  if (curChar == 108)
					 jjCheckNAddStates(0, 5);
				  break;
			   case 272:
				  if (curChar == 103 && kind > 7)
					 kind = 7;
				  break;
			   case 273:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 272;
				  break;
			   case 274:
				  if (curChar == 104 && kind > 7)
					 kind = 7;
				  break;
			   case 275:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 274;
				  break;
			   case 276:
				  if (curChar == 103)
					 jjstateSet[jjnewStateCnt++] = 275;
				  break;
			   case 277:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 276;
				  break;
			   case 278:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 277;
				  break;
			   case 279:
				  if (curChar == 114 && kind > 7)
					 kind = 7;
				  break;
			   case 280:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 279;
				  break;
			   case 281:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 280;
				  break;
			   case 282:
				  if (curChar == 116)
					 jjstateSet[jjnewStateCnt++] = 281;
				  break;
			   case 283:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 282;
				  break;
			   case 285:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 284;
				  break;
			   case 286:
				  if (curChar == 110)
					 jjstateSet[jjnewStateCnt++] = 285;
				  break;
			   case 287:
				  if (curChar == 100)
					 jjstateSet[jjnewStateCnt++] = 286;
				  break;
			   case 288:
				  if (curChar == 117)
					 jjstateSet[jjnewStateCnt++] = 287;
				  break;
			   case 289:
				  if (curChar == 111)
					 jjstateSet[jjnewStateCnt++] = 288;
				  break;
			   case 290:
				  if (curChar == 114 && kind > 9)
					 kind = 9;
				  break;
			   case 291:
				  if (curChar == 101)
					 jjstateSet[jjnewStateCnt++] = 290;
				  break;
			   case 292:
				  if (curChar == 121)
					 jjstateSet[jjnewStateCnt++] = 291;
				  break;
			   case 293:
				  if (curChar == 97)
					 jjstateSet[jjnewStateCnt++] = 292;
				  break;
			   default : break;
			}
		 } while(i != startsAt);
	  }
	  else
	  {
		 int hiByte = (int)(curChar >> 8);
		 int i1 = hiByte >> 6;
		 long l1 = 1L << (hiByte & 077);
		 int i2 = (curChar & 0xff) >> 6;
		 long l2 = 1L << (curChar & 077);
		 do
		 {
			switch(jjstateSet[--i])
			{
			   default : break;
			}
		 } while(i != startsAt);
	  }
	  if (kind != 0x7fffffff)
	  {
		 jjmatchedKind = kind;
		 jjmatchedPos = curPos;
		 kind = 0x7fffffff;
	  }
	  ++curPos;
	  if ((i = jjnewStateCnt) == (startsAt = 294 - (jjnewStateCnt = startsAt)))
		 return curPos;
	  try { curChar = input_stream.readChar(); }
	  catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   36, 273, 278, 283, 289, 293, 207, 211, 215, 219, 231, 243, 256, 270, 200, 202,
   205, 177, 183, 198, 159, 167, 175, 145, 147, 157, 137, 143, 131, 133, 134, 122,
   124, 129, 106, 117,
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, "\173",
"\175", "\47", "\133", "\135", "\50", "\54", "\51", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x7ffe1L,
};
static final long[] jjtoSkip = {
   0x1eL,
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[294];
private final int[] jjstateSet = new int[588];
protected char curChar;
/** Constructor. */
public SyntaxCheckerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
	  throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public SyntaxCheckerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 294; i-- > 0;)
	  jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
	  throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
	  curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken()
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
	  curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
	  jjmatchedKind = 0;
	  matchedToken = jjFillToken();
	  return matchedToken;
   }

   try { input_stream.backup(0);
	  while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
		 curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
	  if (jjmatchedPos + 1 < curPos)
		 input_stream.backup(curPos - jjmatchedPos - 1);
	  if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
	  {
		 matchedToken = jjFillToken();
		 return matchedToken;
	  }
	  else
	  {
		 continue EOFLoop;
	  }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
	  EOFSeen = true;
	  error_after = curPos <= 1 ? "" : input_stream.GetImage();
	  if (curChar == '\n' || curChar == '\r') {
		 error_line++;
		 error_column = 0;
	  }
	  else
		 error_column++;
   }
   if (!EOFSeen) {
	  input_stream.backup(1);
	  error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
	  jjstateSet[jjnewStateCnt++] = state;
	  jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
	  jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
	  jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
